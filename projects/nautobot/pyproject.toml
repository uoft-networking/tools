[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
# requires = ["poetry-core @ git+https://github.com/atremblay/poetry-core.git@fix-issue-5621"]
# build-backend = "poetry.core.masonry.api"

[tool.hatch.build]
packages = ["uoft_nautobot"]
dev-mode-dirs = ["../../src"]


[project]
name = "uoft_nautobot"
version = "1.0.0"
description = "A collection of UofT-specific modifications and extensions to Nautobot."
readme = "README.md"
authors = [
  { name = "Alex Tremblay", email = "alex.tremblay@utoronto.ca" },
  { name = "University of Toronto Governing Council", email = "governing.council@utoronto.ca" },
]
license = "MIT"
requires-python = ">=3.10"
dependencies = [
  "nautobot_ssot >= 1.1.0",
  "nautobot_golden_config",
  "uoft_core",
  "nautobot >= 1.3",
  "django-auth-ldap",
  "debugpy",
  "django-debug-toolbar",
  "html-table-parser-python3 >=0.2.0",
  "django-environ",
  "napalm",
  "librenms_handler",
  "python-box",
]

[tool.poe]
shell_interpreter = "bash"

[tool.poe.tasks]
build.shell = '''
poe --root ../.. bump_version nautobot
hatchling build
'''
start.cmd = "nautobot-server start --ini dev_data/uwsgi.ini"
#systemd.cmd = "sudo systemctl $action nautobot-dev.service nautobot-dev-scheduler.service nautobot-dev-worker.service"
systemd.cmd = "sudo systemctl $action nautobot-dev-scheduler.service nautobot-dev-worker.service"
systemd.args = [{ name = 'action', positional = true }]
systemd-edit.shell = "sudoedit /etc/systemd/system/nautobot-dev.service /etc/systemd/system/nautobot-dev-worker.service /etc/systemd/system/nautobot-dev-scheduler.service; sudo systemctl daemon-reload"
systemd-tail.cmd = "sudo journalctl -f -u nautobot-dev -u nautobot-dev-worker -u nautobot-dev-scheduler"
prod-systemd.cmd = "sudo systemctl $action nautobot.service nautobot-scheduler.service nautobot-worker.service"
prod-systemd.args = [{ name = 'action', positional = true }]
prod-systemd-edit.shell = "sudoedit /etc/systemd/system/nautobot.service /etc/systemd/system/nautobot-worker.service /etc/systemd/system/nautobot-scheduler.service; sudo systemctl daemon-reload"
prod-systemd-tail.cmd = "sudo journalctl -f -u nautobot -u nautobot-worker -u nautobot-scheduler"
prod-shell.cmd = "sudo -u nautobot env -C /opt/nautobot bash --login"
prod-deploy-hotfix.shell = '''
poe --root ../.. build core
poe --root ../.. bump_version nautobot
poe --root ../.. build nautobot
gpipx runpip nautobot install --upgrade ../core/dist/*.whl dist/*.whl
gpipx runpip nautobot install --upgrade --force-reinstall --no-deps ../core/dist/*.whl dist/*.whl
poe prod-systemd restart
poe prod-systemd status
'''
db-refresh.shell = '''
set -euo pipefail
poe systemd stop
/opt/backups/db/actions sync_prod_to_dev
nautobot-server migrate
poe systemd start
'''
curl-as.shell = '''
set -euo pipefail
case $user in
  helpdesk)
    token=$HELPDESK_API_TOKEN;;
  *)
    token=$MY_API_TOKEN;;
esac
curl -H "Authorization: Token $token" -H "Accept: application/json;" -H 'Content-Type: application/json' -X DELETE -d '{"mac-address":"10:02:b5:27:bb:0e"}' -s http://127.0.0.1:8000/api/$endpoint/ | jq .
'''
curl-as.args = [
  { name = 'user', positional = true, help = 'helpdesk or me' },
  { name = 'endpoint', positional = true, help = 'api/$endpoint/' },
]
